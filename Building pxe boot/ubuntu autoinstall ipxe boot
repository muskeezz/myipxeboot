###Setup tftp 

1. Fresh Ubuntu 22.04 Installed
2. Update and Upgrade ubuntu
# sudo apt update && sudo apt upgrade -y
3. Setup TFTP
# sudo apt install tftpd-hpa -y
# sudo systemctl status tftpd-hpa
4. Configure TFPT
# sudo cat /etc/default/tftpd-hpa
# /etc/default/tftpd-hpa

TFTP_USERNAME="tftp"
TFTP_DIRECTORY="/tftp"
TFTP_ADDRES=":69"
TFTP_OPTION="--secure"
# sudo mkdir /tftp
# sudo chown tftp:tftp /tftp
# sudo systemctl restart tftpd-hpa
# sudo systemctl enable ftfpd-hpa
# sudo systemctl status tftpd-hpa

###Setup web
# sudo apt install apache2 -y
# sudo ufw allow http
# sudo ufw allow https
# sudo ufw reload
# sudo cp -v /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf.orig
# vi /etc/apache2/sites-available/000-default.conf
<VirtualHost *:80>
        ServerAdmin some@mail.com
        DocumentRoot /pxeboot

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

<Directory />
        Options +FollowSymLinks +Indexes
        Require all granted
</Directory>
# sudo systemctl restart apache2
# sudo systemctl enable apache2
# sudo systemctl status apache2

#Test the configuration if successfull
# touch /tftp/test.file
#Open web browser http://10.10.10.200

##FOR Windows Boot ONLY(OPTIONAL)
# sudo apt install samba -y
# sudo vi /etc/samba/smb.conf
[pxe-boot]
    comment = Samba on Ubuntu
    path = /pxe-boot
    read only = yes
    browsable = yes
# sudo systemctl restart samba
# sudo systemctl enable samba
# sudo systemctl status samba

###Setup pxe boot
##Setup iPXE
# sudo mkdir -pv /ipxeboot/{config,firmware,os-images}
#Directory structure
/pxeboot
└─config
└─firmware
    └─ipxe.efi
    └─ipxe.pxe
    └─undionly.kkkpxe
    └─undionly.kkpxe
    └─undionly.kpxe
└─os-images


# sudo apt update
# sudo apt install build-essential liblzma-dev isolinux git -y
or
# apt install make gcc binutils perl mtools mkisofs syslinux liblzma-dev isolinux -y
# git clone https:/github.com/ipxe/ipxe.git
# cd ipxe/src
# vi /ipxeboot/config/bootconfig.ipxe
#!ipxe

dhcp
chain tftp://${next-server}/ipxeboot/config/boot.ipxe
# make bin/ipxe.pxe bin/undionly.kpxe bin/undionly.kkpxe bin/undionly.kkkpxe bin-x86_64-efi/ipxe.efi EMBED=/pxeboot/config/bootconfig.ipxe
or
# vi /ipxeboot/config/bootconfig.ipxe
#!ipxe
dhcp && goto netboot || goto dhcperror

:dhcperror
prompt --key s --timeout 10000 DHCP failed, hit 's' for the iPXE shell; reboot in 10 seconds && shell || reboot

:netboot
chain tftp://${next-server}/pxeboot/config/boot.ipxe ||
prompt --key s --timeout 10000 Chainloading failed, hit 's' for the iPXE shell; reboot in 10 seconds && shell || reboot
# make bin/ipxe.pxe bin/undionly.kpxe bin/undionly.kkpxe bin/undionly.kkkpxe bin-x86_64-efi/ipxe.efi EMBED=/pxeboot/config/bootconfig.ipxe
# sudo cp -v bin/{ipxe.pxe,undionly.kpxe,undionly.kkpxe,undionly.kkkpxe} bin-x86_64-efi/ipxe.efi /pxeboot/

##ENABLE NTFS and PING support(OPTIONAL)
#NTFS support
# sudo sed -i 's/#undef\tDOWNLOAD_PROTO_NFS/#define\tDOWNLOAD_PROTO_NFS/' config/general.h
#Ping support
# sudo sed -i 's/\/\/#define\ PING_CMD/#define\ PING_CMD/' config/general.h
# sudo sed -i 's/\/\/#define\ IPSTAT_CMD/#define\ IPSTAT_CMD/' config/general.h
# sudo sed -i 's/\/\/#define\ REBOOT_CMD/#define\ REBOOT_CMD/' config/general.h
# sudo sed -i 's/\/\/#define\ POWEROFF/#define\ POWEROFF/' config/general.

##Existing DHCP Server
#Setup your DHCP Server(fortigate 90D)
1. Login as admin
2. Left side panel click Network>Interfaces
3. Edit the VLAN/Port                                           # segment where the pxeboot server reside
4. Check DHCP Server
5. Click advanced
6. Next Bootstrap Server: 10.10.30.200                          # pxeboot server
7. Additional Options Create New
Option Code: 67 (File Name)    Value: firmware/ipxe.pxe         # for bios
Option Code: 67 (File Name)    Value: firmware/ipxe.efi         # for UEFI
8. Click OK

##Setup Internal DHCP Setup (OPTIONAL)
# sudo systemctl stop systemd-resolved
# sudo systemctl disable systemd-resolved
# sudo unlink /etc/resolv.conf
# cat >/etc/resolv.conf <<EOF
nameserver 127.0.0.1
nameserver 1.1.1.1
nameserver 8.8.8.8
EOF
# ping -c3 google.com
# sudo apt install dnsmasq -y
# sudo mv -v /etc/dnsmasq.conf /etc/dnsmasq.conf.orig
# sudo vi /etc/dnsmasq.conf
interface=ens33                 # ens33 active network interface
bind-interfaces
domain=

dhcp-range=ens38,10.10.10.190,10.10.10.200,255.255.255.0,8h
dhcp-option=option:router,10.10.10.1
dhcp-option=option:dns-server,1.1.1.1
dhcp-option=option:dns-server,8.8.8.8

enable-tftp
tftp-root=/ipxeboot

# boot config for BIOS systems
dhcp-match=set:bios-x86,option:client-arch,0
dhcp-boot=tag:bios-x86,firmware/ipxe.pxe

# boot config for UEFI systems
dhcp-match=set:efi-x86_64,option:client-arch,7
dhcp-match=set:efi-x86_64,option:client-arch,9
dhcp-boot=tag:efi-x86_64,firmware/ipxe.efi
# sudo systemctl restart dnsmasq
# sudo systemctl enable dnsmasq
# sudo systemctl status dnsmasq

##iPXE NFS Share
# sudo apt install nfs-kernel-server -y
# sudo vi /etc/exportfs
/pxeboot           *(ro,sync,no_wdelay,insecure_locks,no_root_squash,insecure,no_subtree_check)
# sudo exportfs -av

##Configure Ubuntu Distribution
# wget https://releases.ubuntu.com/jammy/ubuntu-22.04-desktop-amd64.iso
# sudo mount -o loop -t iso9660 /nfs/myfile/ISO/Ubuntu/ubuntu-22.04.3-desktop-amd64.iso /mnt
# mkdir -pv /ipxeboot/os-images/ubuntu-22.04-desktop-amd64
# 
#Directory structure
/pxeboot
└─config
└─firmware
    └─ipxe.efi
    └─ipxe.pxe
    └─undionly.kkkpxe
    └─undionly.kkpxe
    └─undionly.kpxe
└─os-images
    └─ubuntu-22.04-desktop-amd64
# sudo cp -rv /mnt/* /ipxeboot/os-images/ubuntu-22.04-desktop-amd64/
or
# sudo rsync -avz /mnt/ /ipxeboot/os-images/ubuntu-22.04-desktop-amd64/
# sudo umount /mnt
# rm -v ubuntu-22.04-desktop-amd64.iso

##Create Boot Menu
# sudo vi /ipxeboot/config/boot.ipxe
#!ipxe

set server_ip  10.10.10.200
set root_path  /pxeboot

menu Select an OS to boot
item ubuntu-22.04-desktop-amd64         Install Ubuntu Desktop 22.04 LTS
choose --default exit --timeout 10000 option && goto ${option}

:ubuntu-22.04-desktop-amd64
set os_root os-images/ubuntu-22.04-desktop-amd64
kernel tftp://${server_ip}/${os_root}/casper/vmlinuz
initrd tftp://${server_ip}/${os_root}/casper/initrd
imgargs vmlinuz initrd=initrd boot=casper maybe-ubiquity netboot=nfs ip=dhcp nfsroot=${server_ip}:${root_path}/${os_root} quiet splash ---
boot

##Configure Windows 10 ontop of current setup
##For reference: https://rpi4cluster.com/pxe/win/
# wget 
# sudo mkdir -pv /ipxeboot/os-images/windows-10
# sudo mount -o windows-10.iso /mnt
# sudo cp -rv /mnt/* /ipxeboot/os-images/windows-10/
# sudo umount /mnt
# wget https://github.com/ipxe/wimboot/releases/latest/download/wimboot
or
#Create your own custom boot.wim base on the motherboard and network card
#INPUT WINDOWS GUIDE


# sudo vi /ipxeboot/config/boot.ipxe
#!ipxe

set boot-url http://10.10.10.200
set root_path  pxeboot

menu
item --gap -- ---------------- iPXE boot menu ----------------
item windows-10                         Windows 10
item shell                              ipxe shell
item exit                               Exit to BIOS
choose --default return --timeout 10000 target && goto ${target}

:windows-10
set os_root os-images/windows-10
chain ${boot-url}/${root_path}/${os_root}/winboot.ipxe

:shell
shell

:exit
exit
#Create winboot.ipxe
# vi /pxeboot/os-image/windows-10
#!ipxe

kernel ${boot-url}/${root_path}/${os_root}/wimboot gui
initrd ${boot-url}/${root_path}/${os_root}/winpeshl.ini     winpeshl.ini
initrd ${boot-url}/${root_path}/${os_root}/install.bat      install.bat
initrd ${boot-url}/${root_path}/${os_root}/boot/bcd         BCD
initrd ${boot-url}/${root_path}/${os_root}/boot/boot.sdi    boot.sdi
initrd ${boot-url}/${root_path}/${os_root}/boot.wim         boot.wim
#initrd ${boot-url}/${root_path}/${os_root}/boot.wim        boot.wim

boot || goto failed
#Create winpeshl.ini
[LaunchApps]
"install.bat"
#Create install.bat
# sudo vi install.bat
wpeinit
net use \\10.10.10.200\pxeboot\os-images\windows-10
\\10.0.0.2\pxeboot\os-images\windows-10\setup.exe

#Windows 10 Directory Tree
#Directory structure
/pxeboot
├─config
└─firmware
    ├─ipxe.efi
    ├─ipxe.pxe
    ├─undionly.kkkpxe
    ├─undionly.kkpxe
    └─undionly.kpxe
└─os-images
    ├─ubuntu-22.04-desktop-amd64
    └─windows-10
        ├─ boot/
        ├─ efi/
        ├─ sources/
        ├─ autorun.inf
        ├─ bootmgr
        ├─ bootmgr.efi
        └─ setup.exe                #We call this one in install.bat




##Configure Other Linux Distribution ontop of current setup
# wget https://developers.redhat.com/content-gateway/file/rhel/8.9.0_Beta/rhel-8.9-beta-x86_64-dvd.iso
# sudo mount -o loop rhel-8.9-beta-x86_64-dvd.iso /mnt
# mkdir -pv /ipxeboot/os-images/rhel-8.9-x86_64
# sudo cp -pv /mnt/* /ipxeboot/os-images/rhel-8.9-x86_64/
# sudo umount /mnt
# sudo vi /ipxeboot/config/boot.ipxe
#!ipxe

set server_ip  192.168.0.130
set root_path  /pxeboot

menu Select an OS to boot
item ubuntu-22.04-desktop-amd64         Install Ubuntu Desktop 22.04 LTS
item rhel-8.9-x86_64                    Install Red Hat Enterprise Linux 8.9
choose --default exit --timeout 10000 option && goto ${option}

:ubuntu-22.04-desktop-amd64
set os_root os-images/ubuntu-22.04-desktop-amd64
kernel tftp://${server_ip}/${os_root}/casper/vmlinuz
initrd tftp://${server_ip}/${os_root}/casper/initrd
imgargs vmlinuz initrd=initrd boot=casper maybe-ubiquity netboot=nfs ip=dhcp nfsroot=${server_ip}:${root_path}/${os_root} quiet splash ---
boot

:rhel-8.9-x86_64 
set os_root os-images/rhel-8.9-x86_64 
kernel tftp://${server_ip}/${os_root}/images/pxeboot/vmlinuz
initrd tftp://${server_ip}/${os_root}/images/pxeboot/initrd.img
imgargs vmlinuz initrd=initrd.img ip=dhcp rd.live.image root=live:nfs://${server_ip}:${root_path}/${os_root}/squashfs.img
boot


syslinux        https://mirrors.edge.kernel.org/pub/linux/utils/boot/syslinux/syslinux-6.03.tar.gz